@model MusicDetailViewModel

<strong>Title</strong>
<p><em>@Model.SongTitle</em></p>

<strong>Album</strong>
<p><em>@Model.AlbumTitle</em></p>

<strong>Band</strong>
<p><em>@Model.BandName</em></p>

<strong>Duration</strong>
<p><em>@Model.Duration.ToString()</em></p>

<strong>Release Date</strong>
<p><em>@(Model.ReleaseDate?.ToShortDateString() ?? "No release date available.")</em></p>


<form asp-controller="Music"
      asp-action="AddReviewToSong"
      asp-route-id="@Model.Id">

    <div class="form-group">
        <label asp-for="NewReviewScore"></label>
        <input asp-for="NewReviewScore" type="range" min="0" max="10" step="1">
        <span class="text-danger" asp-validation-for="NewReview"></span>
    </div>

    <div class="form-group">
        <label asp-for="NewReview"></label>
        <textarea asp-for="NewReview" cols="50" rows="5"></textarea>
        <span class="text-danger" asp-validation-for="NewReview"></span>
    </div>
    <button class="btn btn-primary" type="submit">Enter</button>
</form>

<strong>Reviews</strong>
@if (Model.Reviews == null || !Model.Reviews.Any())
{
    <p><em>No reviews available.</em></p>
}
else
{
    @foreach (var review in Model.Reviews)
    {
        <div>
            <strong>@review.User</strong><br />
            <em>@review.Score</em>
            <p>@review.Description</p>
        </div>
    }
}