@model MediaCollection.Models.PodcastEpisodeModels.PodcastEpisodeDetailViewModel
@inject SignInManager<MediaCollection.Domain.MediaCollectionUser> signInManager

<strong><em>@Model.Title</em></strong>

<div id="podcast-div"></div>

@if (signInManager.IsSignedIn(User))
{
    <partial name="ReviewForm" model="@(new ReviewFormViewModel { Id = Model.Id, ReviewType = nameof(MediaCollection.Domain.PodcastEpisode) })" />
}

<strong>Reviews</strong>
@if (Model.Reviews == null || !Model.Reviews.Any())
{
    <p><em>No reviews available.</em></p>
}
else
{
    @foreach (var review in Model.Reviews)
    {
        if (review.Approved)
        {

            <div>
                <strong>@review.User</strong><br />
                <em>@review.Score</em>
                <p>@review.Description</p>
            </div>
        }
        else if (User.IsInRole("Admin") && !review.Approved)
        {
            <div>
                <strong>@review.User</strong><br />
                <em>@review.Score</em>
                <p>@review.Description</p>
                <a asp-controller="Review"
                   asp-action="ApproveSongReview"
                   asp-route-reviewId="@review.Id"
                   asp-route-songId="@Model.Id"
                   class="btn btn-secondary">Approve Review</a>
            </div>
        }
    }
}

<script src="https://connect.soundcloud.com/sdk/sdk-3.3.2.js"></script>
<script>
    SC.initialize({
        client_id: '@DotNetEnv.Env.GetString("SOUNDCLOUD_API_KEY")'
    });

    var track_url = '@Model.Link';
    SC.oEmbed(track_url, { auto_play: true }).then(function (oEmbed) {
        debugger;
        console.log('oEmbed response: ', oEmbed);
        /**/
        let div = document.getElementById('podcast-div');
        div.innerHTML = oEmbed.html;;
    /**/
});

</script>

@if (Model.AlreadyReviewed)
{
    <script>

        alert("You already reviewed this item");

    </script>
}
